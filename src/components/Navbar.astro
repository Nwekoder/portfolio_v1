---
const pathname = Astro.url.pathname
---

<nav x-data="navbar" :class="scrolled ? 'scrolled' : ''">
	<a href="/" class="brand">Nwekoder</a>

	<div class="links">
		<a class={pathname === "/" ? "active" : ""} href="/">Home</a>
		<a class={pathname === "/projects" ? "active" : ""} href="/projects">Projects</a>
		<a class={pathname === "/posts" ? "active" : ""} href="/posts">Posts</a>
	</div>

	<a href="https://wa.me/6285161351254" class="cta">Contact Me</a>
</nav>

<script>
	document.addEventListener("alpine:init", () => {
		Alpine.data("navbar", () => ({
			scrolled: false,
			init() {
				this.scrolled = scrollY > 40

				window.addEventListener("scroll", () => {
					this.scrolled = scrollY > 40
				})
			},
		}))
	})
</script>

<style scoped>
	nav {
		position: fixed;
		top: 0;
		left: 0;
		width: 100%;
		height: 4rem;
		display: flex;
		align-items: center;
		justify-content: space-between;
		padding-inline: 1.275rem;
		transition-property: background-color, color;
		transition-duration: 500ms;
		z-index: 9999;

		@media (min-width: 748px) {
			& {
				padding-inline: 4.75rem;
			}
		}

		a {
			color: inherit;
			text-decoration: none;
		}

		&.scrolled {
			background-color: var(--primary);
			color: var(--background);

			.cta {
				background-color: var(--background);
				color: var(--primary);
			}

			.links a::before {
				background-color: var(--background);
			}

			.brand {
				color: var(--background);
			}
		}

		.brand {
			font-size: clamp(1.44rem, 1.1993rem + 1.2036vw, 1.777rem);
			font-weight: 700;
			background: linear-gradient(to bottom, var(--primary) 45%, var(--text) 80%);
			color: transparent;
			-webkit-background-clip: text;
		}

		.links {
			display: none;
			align-items: center;
			gap: 4px;

			@media (min-width: 748px) {
				display: flex;
			}

			a {
				padding: 12px 20px;
				position: relative;

				&::before {
					content: "";
					position: absolute;
					bottom: 2px;
					left: 50%;
					transform: translateX(-50%);
					width: 0;
					height: 2px;
					background-color: var(--accent);
					transition-property: width;
					transition-duration: 250ms;
					transition-timing-function: ease-in-out;
				}

				&:hover::before,
				&.active::before {
					width: 80%;
				}
			}
		}

		.cta {
			display: none;
			padding: 8px 16px;
			background-color: var(--primary);
			border-radius: 40px;
			color: var(--background);

			@media (min-width: 540px) {
				display: flex;
			}
		}
	}
</style>
